/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Condition struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConditionSpec   `json:"spec,omitempty"`
	Status            ConditionStatus `json:"status,omitempty"`
}

type ConditionSpecTerm struct {
	// In minutes, must be in the range of 5 to 120, inclusive.
	Duration *int64 `json:"duration" tf:"duration"`
	// One of (above, below, equal). Defaults to equal.
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// One of (critical, warning). Defaults to critical.
	// +optional
	Priority *string `json:"priority,omitempty" tf:"priority"`
	// Must be 0 or greater.
	Threshold *float64 `json:"threshold" tf:"threshold"`
	// One of (all, any).
	TimeFunction *string `json:"timeFunction" tf:"time_function"`
}

type ConditionSpec struct {
	State *ConditionSpecResource `json:"state,omitempty" tf:"-"`

	Resource ConditionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ConditionSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// One of (application, instance). Choose application for most scenarios. If you are using the JVM plugin in New Relic, the instance setting allows your condition to trigger for specific app instances.
	// +optional
	ConditionScope *string `json:"conditionScope,omitempty" tf:"condition_scope"`
	// Whether the condition is enabled.
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// The instance IDs associated with this condition.
	// +kubebuilder:validation:MinItems=1
	Entities []int64 `json:"entities" tf:"entities"`
	// A valid Garbage Collection metric e.g. GC/G1 Young Generation. This is required if you are using apm_jvm_metric with gc_cpu_time condition type.
	// +optional
	GcMetric *string `json:"gcMetric,omitempty" tf:"gc_metric"`
	// The metric field accepts parameters based on the type set.
	Metric *string `json:"metric" tf:"metric"`
	// The title of the condition. Must be between 1 and 128 characters, inclusive.
	Name *string `json:"name" tf:"name"`
	// The ID of the policy where this condition should be used.
	PolicyID *int64 `json:"policyID" tf:"policy_id"`
	// Runbook URL to display in notifications.
	// +optional
	RunbookURL *string `json:"runbookURL,omitempty" tf:"runbook_url"`
	// +kubebuilder:validation:MinItems=1
	Term []ConditionSpecTerm `json:"term" tf:"term"`
	// The type of condition. One of: (apm_jvm_metric, apm_kt_metric, browser_metric, mobile_metric, servers_metric, apm_app_metric).
	Type *string `json:"type" tf:"type"`
	// A custom metric to be evaluated.
	// +optional
	UserDefinedMetric *string `json:"userDefinedMetric,omitempty" tf:"user_defined_metric"`
	// One of: (average, min, max, total, sample_size).
	// +optional
	UserDefinedValueFunction *string `json:"userDefinedValueFunction,omitempty" tf:"user_defined_value_function"`
	// Automatically close instance-based violations, including JVM health metric violations, after the number of hours specified. Must be: 1, 2, 4, 8, 12 or 24.
	// +optional
	ViolationCloseTimer *int64 `json:"violationCloseTimer,omitempty" tf:"violation_close_timer"`
}

type ConditionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ConditionList is a list of Conditions
type ConditionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Condition CRD objects
	Items []Condition `json:"items,omitempty"`
}
