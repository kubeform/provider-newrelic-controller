/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AlertCondition struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AlertConditionSpec   `json:"spec,omitempty"`
	Status            AlertConditionStatus `json:"status,omitempty"`
}

type AlertConditionSpecTerm struct {
	// In minutes, must be in the range of 5 to 120, inclusive.
	Duration *int64 `json:"duration" tf:"duration"`
	// One of `above`, `below`, or `equal`. Defaults to equal.
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// One of `critical` or `warning`. Defaults to critical.
	// +optional
	Priority *string `json:"priority,omitempty" tf:"priority"`
	// Must be 0 or greater.
	Threshold *float64 `json:"threshold" tf:"threshold"`
	// One of `all` or `any`.
	TimeFunction *string `json:"timeFunction" tf:"time_function"`
}

type AlertConditionSpec struct {
	State *AlertConditionSpecResource `json:"state,omitempty" tf:"-"`

	Resource AlertConditionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AlertConditionSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Whether or not this condition is enabled.
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// The plugin component IDs to target.
	// +kubebuilder:validation:MinItems=1
	Entities []int64 `json:"entities" tf:"entities"`
	// The plugin metric to evaluate.
	Metric *string `json:"metric" tf:"metric"`
	// The metric description.
	MetricDescription *string `json:"metricDescription" tf:"metric_description"`
	// The title of the condition. Must be between 1 and 64 characters, inclusive.
	Name *string `json:"name" tf:"name"`
	// The GUID of the plugin which produces the metric.
	PluginGuid *string `json:"pluginGuid" tf:"plugin_guid"`
	// The ID of the installed plugin instance which produces the metric.
	PluginID *string `json:"pluginID" tf:"plugin_id"`
	// The ID of the policy where this condition should be used.
	PolicyID *int64 `json:"policyID" tf:"policy_id"`
	// Runbook URL to display in notifications.
	// +optional
	RunbookURL *string `json:"runbookURL,omitempty" tf:"runbook_url"`
	// +kubebuilder:validation:MinItems=1
	Term []AlertConditionSpecTerm `json:"term" tf:"term"`
	// The value function to apply to the metric data.  One of `min`, `max`, `average`, `sample_size`, `total`, or `percent`.
	ValueFunction *string `json:"valueFunction" tf:"value_function"`
}

type AlertConditionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AlertConditionList is a list of AlertConditions
type AlertConditionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AlertCondition CRD objects
	Items []AlertCondition `json:"items,omitempty"`
}
